/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FinalizeRoom;

import userinterface.SchemeProvision.*;
import Business.EcoSystem;
import Business.Enterprise.*;
import Business.Network.Network;
import Business.Organization.*;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FinalizeHouseWorkRequest;
import Business.WorkQueue.HouseAgreementWorkRequest;
import Business.WorkQueue.HousingOptionsWorkRequest;
import Business.WorkQueue.SchemeProvisionWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kharc
 */
public class FinalizeRoomWorkRequest extends javax.swing.JPanel {

    JPanel userProcessContainer;
    FinalizeHouseWorkRequest request;
    private UserAccount userAccount;
    private EcoSystem business;
    /**
     * Creates new form ProcessWorkRequestJPanel
     */
    public FinalizeRoomWorkRequest(JPanel userProcessContainer, FinalizeHouseWorkRequest request, UserAccount userAccount, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.userAccount = userAccount;
        this.business = business;
        populateTable();
    }
    public void populateTable(){
        DefaultTableModel model1 = (DefaultTableModel) tblPersonRecords.getModel();
        DefaultTableModel model2 = (DefaultTableModel) tblHousingOptions.getModel();
        DefaultTableModel model3 = (DefaultTableModel) tblSchemes.getModel();
        model1.setRowCount(0);
        model2.setRowCount(0);
        model3.setRowCount(0);
        if(request.getStudent()!=null){
            Object[] row = new Object[4];
            row[0] = request.getStudent().getName();
            row[1] = request.getStudent().getIncome();
            row[2] = request.getStudent().getDependents();
            row[3] = request.getStudent().getPreferredLocation();
            model1.addRow(row);   
        }
        for(List<String> address:request.getAddressesForStudent()){
            Object[] row = new Object[2];
            row[0] = address.get(0);
            row[1] = address.get(1);
            model2.addRow(row);  
        }
        for(String scheme:request.getSchemes()){
            Object[] row = new Object[1];
            row[0] = scheme;
            model3.addRow(row);  
        }
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSubmit = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersonRecords = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHousingOptions = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSchemes = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        btnSubmit.setBackground(new java.awt.Color(153, 255, 153));
        btnSubmit.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnSubmit.setText("Select accomodation and scheme to finalize");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(153, 255, 153));
        backJButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        backJButton.setText("< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("FINALIZE ACCOMODATION");

        tblPersonRecords.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        tblPersonRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Income", "Dependents", "Preferred Location"
            }
        ));
        jScrollPane1.setViewportView(tblPersonRecords);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Student Details:");

        tblHousingOptions.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        tblHousingOptions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Address", "Rent"
            }
        ));
        jScrollPane2.setViewportView(tblHousingOptions);

        tblSchemes.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        tblSchemes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Schemes"
            }
        ));
        jScrollPane3.setViewportView(tblSchemes);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Accomodation Options and Schemes available for this Student");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(551, 551, 551))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(551, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSubmit)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap())
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(254, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        FinalizeRoomWorkArea dwjp = (FinalizeRoomWorkArea) component;
        dwjp.populateReceiveTable();
        dwjp.populateSentTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        if(request.getStatus().equals("Completed")){
            JOptionPane.showMessageDialog(null,"This request has already been completed by you!");
            return;
        }
        int selectedRow1 = tblHousingOptions.getSelectedRow();
        int selectedRow2 = tblSchemes.getSelectedRow();
        if (selectedRow1 < 0){
            JOptionPane.showMessageDialog(null,"Select a house to finalize!");
            return;
        }
        if (selectedRow2 < 0){
            JOptionPane.showMessageDialog(null,"Select a Scheme to finalize!");
            return;
        }
        String schemeSelected = (String) tblSchemes.getValueAt(selectedRow2, 0);
        String addressSelected = (String) tblHousingOptions.getValueAt(selectedRow1, 0);
        String rentSelected = (String) tblHousingOptions.getValueAt(selectedRow1, 1);
        List<String> address = new ArrayList<>();
        address.add(addressSelected);
        address.add(rentSelected);
        request.setTestResult("Send to Housing Agreement");
        request.setStatus("Completed");
        request.getShelterAllocWorkReq().setTestResult("Completed by Finalize House and sent to House agreement");
        UserAccount account = new UserAccount();
        account.setUsername("None");
        request.getShelterAllocWorkReq().setReceiver(account);
        HouseAgreementWorkRequest fcRequest = new HouseAgreementWorkRequest();
        fcRequest.setMessage("Create Lease");
        fcRequest.setSender(userAccount);
        fcRequest.setStatus("Sent");
        fcRequest.setStudent(request.getStudent());
        fcRequest.setShelterAllocWorkReq(request.getShelterAllocWorkReq());
        fcRequest.setAddressForStudent(address);
        fcRequest.setScheme(schemeSelected);
        Date d = new Date();
        fcRequest.setRequestDate(d);
        Organization org = null;

        for (Network network : business.getNetworkList()) {
            //Step 2.a: check against each enterprise
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof UniversityOfficeEnterprise) {
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof AccomodationAgreementOrg) {
                            org = organization;
                            break;
                        }
                    }
                }
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(fcRequest);
            userAccount.getWorkQueue().getWorkRequestList().add(fcRequest);
            JOptionPane.showMessageDialog(this, "Request Sent to House Agreement Organization");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblHousingOptions;
    private javax.swing.JTable tblPersonRecords;
    private javax.swing.JTable tblSchemes;
    // End of variables declaration//GEN-END:variables
}
